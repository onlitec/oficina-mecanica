<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‚öôÔ∏è Configura√ß√µes - Sistema de Gest√£o de Oficina Mec√¢nica</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f8f9fa;
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px 20px;
        }
        
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }
        
        .page-title {
            font-size: 2em;
            color: #333;
        }
        
        .btn {
            background: #667eea;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1em;
            text-decoration: none;
            display: inline-block;
            transition: background 0.3s ease;
        }
        
        .btn:hover {
            background: #5a6fd8;
        }
        
        .btn-secondary {
            background: #6c757d;
        }
        
        .btn-secondary:hover {
            background: #545b62;
        }
        
        .btn-success {
            background: #28a745;
        }
        
        .btn-success:hover {
            background: #218838;
        }
        
        .btn-danger {
            background: #dc3545;
        }
        
        .btn-danger:hover {
            background: #c82333;
        }
        
        .settings-tabs {
            display: flex;
            background: white;
            border-radius: 10px 10px 0 0;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .tab-button {
            flex: 1;
            padding: 15px 20px;
            background: #f8f9fa;
            border: none;
            cursor: pointer;
            font-size: 1em;
            transition: all 0.3s ease;
            border-bottom: 3px solid transparent;
        }
        
        .tab-button.active {
            background: white;
            border-bottom-color: #667eea;
            color: #667eea;
            font-weight: bold;
        }
        
        .tab-button:hover {
            background: #e9ecef;
        }
        
        .tab-content {
            background: white;
            border-radius: 0 0 10px 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 30px;
            min-height: 500px;
        }
        
        .tab-panel {
            display: none;
        }
        
        .tab-panel.active {
            display: block;
        }
        
        .form-section {
            margin-bottom: 30px;
        }
        
        .section-title {
            font-size: 1.3em;
            font-weight: bold;
            color: #333;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 2px solid #e9ecef;
        }
        
        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .form-group {
            display: flex;
            flex-direction: column;
        }
        
        .form-label {
            margin-bottom: 5px;
            font-weight: 500;
            color: #333;
        }
        
        .form-input {
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1em;
            transition: border-color 0.3s ease;
        }
        
        .form-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.2);
        }
        
        .form-textarea {
            min-height: 100px;
            resize: vertical;
        }
        
        .color-input {
            height: 50px;
            padding: 5px;
            cursor: pointer;
        }
        
        .file-upload {
            display: block;
            cursor: pointer;
            background: #f8f9fa;
            border: 2px dashed #ddd;
            border-radius: 8px;
            padding: 30px;
            text-align: center;
            transition: all 0.3s ease;
            width: 100%;
            margin: 10px 0;
        }

        .file-upload:hover {
            border-color: #667eea;
            background: #f0f4ff;
        }

        .file-upload input[type="file"] {
            display: none;
        }
        
        .logo-preview {
            max-width: 200px;
            max-height: 100px;
            margin: 15px 0;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            border: 2px solid #e9ecef;
            display: block;
        }

        .file-upload.has-file {
            border-color: #28a745;
            background: #f8fff8;
        }

        .file-upload.has-file:hover {
            border-color: #20c997;
            background: #e8f8f5;
        }
        
        .users-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        
        .users-table th,
        .users-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        .users-table th {
            background: #f8f9fa;
            font-weight: bold;
            color: #333;
        }
        
        .users-table tr:hover {
            background: #f8f9fa;
        }
        
        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8em;
            font-weight: bold;
        }
        
        .status-active {
            background: #d4edda;
            color: #155724;
        }
        
        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }
        
        .role-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8em;
            font-weight: bold;
            background: #e7f3ff;
            color: #0066cc;
        }
        
        .action-buttons {
            display: flex;
            gap: 5px;
        }
        
        .btn-small {
            padding: 6px 12px;
            font-size: 0.8em;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
        }
        
        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 30px;
            border-radius: 10px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #ddd;
        }
        
        .modal-title {
            font-size: 1.3em;
            font-weight: bold;
            color: #333;
        }
        
        .close {
            font-size: 1.5em;
            cursor: pointer;
            color: #999;
        }
        
        .close:hover {
            color: #333;
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: #666;
        }
        
        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 8px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .success-message {
            background: #d4edda;
            color: #155724;
            padding: 12px;
            border-radius: 5px;
            margin-bottom: 20px;
            border: 1px solid #c3e6cb;
        }
        
        .error-message {
            background: #f8d7da;
            color: #721c24;
            padding: 12px;
            border-radius: 5px;
            margin-bottom: 20px;
            border: 1px solid #f5c6cb;
        }
        
        @media (max-width: 768px) {
            .settings-tabs {
                flex-direction: column;
            }
            
            .form-grid {
                grid-template-columns: 1fr;
            }
            
            .page-header {
                flex-direction: column;
                gap: 15px;
                align-items: stretch;
            }
            
            .users-table {
                font-size: 0.9em;
            }
            
            .action-buttons {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <!-- Global menu will be inserted here by global-menu.js -->
    
    <div class="container">
        <div class="page-header">
            <h1 class="page-title">‚öôÔ∏è Configura√ß√µes do Sistema</h1>
            <div>
                <a href="/dashboard.html" class="btn btn-secondary">‚Üê Voltar ao Painel</a>
            </div>
        </div>
        
        <!-- Abas de Configura√ß√µes -->
        <div class="settings-tabs">
            <button class="tab-button active" onclick="showTab('system')">
                üè¢ Sistema
            </button>
            <button class="tab-button" onclick="showTab('appearance')">
                üé® Apar√™ncia
            </button>
            <button class="tab-button" onclick="showTab('users')">
                üë• Usu√°rios
            </button>
            <button class="tab-button" onclick="showTab('company')">
                üè™ Empresa
            </button>
            <button class="tab-button" onclick="showTab('email')">
                üìß Email
            </button>
        </div>
        
        <div class="tab-content">
            <!-- Aba Sistema -->
            <div id="system-tab" class="tab-panel active">
                <form id="systemForm">
                    <div class="form-section">
                        <h3 class="section-title">Informa√ß√µes do Sistema</h3>
                        <div class="form-grid">
                            <div class="form-group">
                                <label class="form-label">Nome da Empresa</label>
                                <input type="text" class="form-input" id="appName" name="appName" placeholder="Ex: Oficina do Jo√£o">
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">Descri√ß√£o</label>
                                <input type="text" class="form-input" id="appDescription" name="appDescription" placeholder="Ex: Sistema de Gest√£o Automotiva">
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">Fuso Hor√°rio</label>
                                <select class="form-input" id="timezone" name="timezone">
                                    <option value="America/Sao_Paulo">S√£o Paulo (GMT-3)</option>
                                    <option value="America/Rio_Branco">Rio Branco (GMT-5)</option>
                                    <option value="America/Manaus">Manaus (GMT-4)</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">Moeda</label>
                                <select class="form-input" id="currency" name="currency">
                                    <option value="BRL">Real Brasileiro (R$)</option>
                                    <option value="USD">D√≥lar Americano ($)</option>
                                    <option value="EUR">Euro (‚Ç¨)</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">Idioma</label>
                                <select class="form-input" id="language" name="language">
                                    <option value="pt-BR">Portugu√™s (Brasil)</option>
                                    <option value="en-US">English (US)</option>
                                    <option value="es-ES">Espa√±ol</option>
                                </select>
                            </div>
                        </div>
                        
                        <div style="margin-top: 20px;">
                            <button type="submit" class="btn btn-success">üíæ Salvar Configura√ß√µes</button>
                        </div>
                    </div>
                </form>
            </div>
            
            <!-- Aba Apar√™ncia -->
            <div id="appearance-tab" class="tab-panel">
                <form id="appearanceForm">
                    <div class="form-section">
                        <h3 class="section-title">Logotipo da Empresa</h3>
                        <div class="form-group">
                            <label class="form-label">Upload do Logo</label>
                            <input type="file" id="logoFile" accept="image/*" onchange="previewLogo(this)" style="display: none;">
                            <div class="file-upload" onclick="openFileSelector()">
                                <div id="uploadText">
                                    üìÅ Clique para selecionar o logo<br>
                                    <small>Formatos aceitos: JPG, PNG, GIF, SVG (m√°x. 5MB)</small>
                                </div>
                            </div>
                            <div style="margin-top: 10px; display: flex; gap: 10px;">
                                <button type="button" class="btn btn-secondary" onclick="openFileSelector()">
                                    üìÅ Selecionar Logo
                                </button>
                                <button type="button" class="btn btn-success" onclick="uploadLogo()" id="uploadBtn" style="display: none;">
                                    üöÄ Fazer Upload
                                </button>
                            </div>
                            <img id="logoPreview" class="logo-preview" style="display: none;">
                        </div>
                    </div>
                    
                    <div class="form-section">
                        <h3 class="section-title">Cores do Sistema</h3>
                        <div class="form-grid">
                            <div class="form-group">
                                <label class="form-label">Cor Prim√°ria</label>
                                <input type="color" class="form-input color-input" id="primaryColor" name="primaryColor" value="#667eea">
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">Cor Secund√°ria</label>
                                <input type="color" class="form-input color-input" id="secondaryColor" name="secondaryColor" value="#764ba2">
                            </div>
                        </div>
                        
                        <div style="margin-top: 20px;">
                            <button type="button" class="btn btn-success" onclick="saveAppearance()">üé® Salvar Apar√™ncia</button>
                            <button type="button" class="btn btn-secondary" onclick="resetColors()">üîÑ Restaurar Padr√£o</button>
                        </div>
                    </div>
                </form>
            </div>
            
            <!-- Aba Usu√°rios -->
            <div id="users-tab" class="tab-panel">
                <div class="form-section">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                        <h3 class="section-title" style="margin: 0;">Gest√£o de Usu√°rios</h3>
                        <button class="btn btn-success" onclick="showUserModal()">‚ûï Novo Usu√°rio</button>
                    </div>
                    
                    <div id="usersTableContainer">
                        <div class="loading">
                            <span class="loading-spinner"></span>
                            Carregando usu√°rios...
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Aba Empresa -->
            <div id="company-tab" class="tab-panel">
                <form id="companyForm">
                    <div class="form-section">
                        <h3 class="section-title">Dados da Empresa</h3>
                        <div class="form-grid">
                            <div class="form-group">
                                <label class="form-label">Nome da Empresa</label>
                                <input type="text" class="form-input" id="companyName" name="companyName" placeholder="Ex: Oficina do Jo√£o">
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">CNPJ</label>
                                <input type="text" class="form-input" id="companyCnpj" name="companyCnpj" placeholder="00.000.000/0000-00">
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">Telefone</label>
                                <input type="text" class="form-input" id="companyPhone" name="companyPhone" placeholder="(11) 99999-9999">
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">Email</label>
                                <input type="email" class="form-input" id="companyEmail" name="companyEmail" placeholder="contato@oficina.com">
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Endere√ßo Completo</label>
                            <textarea class="form-input form-textarea" id="companyAddress" name="companyAddress" placeholder="Rua, n√∫mero, bairro, cidade, estado, CEP"></textarea>
                        </div>
                        
                        <div style="margin-top: 20px;">
                            <button type="submit" class="btn btn-success">üè™ Salvar Dados da Empresa</button>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Aba Email -->
            <div id="email-tab" class="tab-panel">
                <form id="emailForm">
                    <div class="form-section">
                        <h3 class="section-title">Configura√ß√µes de Email</h3>
                        <div class="form-grid">
                            <div class="form-group">
                                <label class="form-label">Servidor SMTP</label>
                                <input type="text" class="form-input" id="smtpHost" name="smtpHost" placeholder="smtp.gmail.com">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Porta SMTP</label>
                                <input type="number" class="form-input" id="smtpPort" name="smtpPort" placeholder="587">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Email do Remetente</label>
                                <input type="email" class="form-input" id="emailFrom" name="emailFrom" placeholder="oficina@empresa.com">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Senha do Email</label>
                                <input type="password" class="form-input" id="emailPassword" name="emailPassword" placeholder="Senha ou App Password">
                            </div>

                            <div class="form-group">
                                <label class="form-label">
                                    <input type="checkbox" id="emailSecure" name="emailSecure" checked>
                                    Usar SSL/TLS
                                </label>
                            </div>

                            <div class="form-group">
                                <label class="form-label">
                                    <input type="checkbox" id="emailEnabled" name="emailEnabled" checked>
                                    Habilitar Envio de Emails
                                </label>
                            </div>
                        </div>

                        <div style="margin-top: 20px; display: flex; gap: 10px;">
                            <button type="submit" class="btn btn-success">üìß Salvar Configura√ß√µes</button>
                            <button type="button" class="btn btn-secondary" onclick="testEmailConnection()">üß™ Testar Conex√£o</button>
                        </div>
                    </div>

                    <div class="form-section">
                        <h3 class="section-title">Templates de Email</h3>
                        <div class="form-group">
                            <label class="form-label">Template de Or√ßamento</label>
                            <textarea class="form-input form-textarea" id="emailTemplateQuote" name="emailTemplateQuote" placeholder="Template para envio de or√ßamentos..."></textarea>
                        </div>

                        <div class="form-group">
                            <label class="form-label">Template de Ordem de Servi√ßo</label>
                            <textarea class="form-input form-textarea" id="emailTemplateOrder" name="emailTemplateOrder" placeholder="Template para ordens de servi√ßo..."></textarea>
                        </div>

                        <div style="margin-top: 20px;">
                            <button type="button" class="btn btn-success">üìù Salvar Templates</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal de Usu√°rio -->
    <div id="userModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="userModalTitle">Novo Usu√°rio</h3>
                <span class="close" onclick="closeUserModal()">&times;</span>
            </div>
            
            <form id="userForm">
                <input type="hidden" id="userId" name="userId">
                
                <div class="form-group">
                    <label class="form-label">Nome Completo</label>
                    <input type="text" class="form-input" id="userName" name="name" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Email</label>
                    <input type="email" class="form-input" id="userEmail" name="email" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Senha</label>
                    <input type="password" class="form-input" id="userPassword" name="password">
                    <small style="color: #666;">Deixe em branco para manter a senha atual (apenas edi√ß√£o)</small>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Fun√ß√£o</label>
                    <select class="form-input" id="userRole" name="role" required>
                        <option value="USER">Usu√°rio</option>
                        <option value="ADMIN">Administrador</option>
                        <option value="MANAGER">Gerente</option>
                        <option value="MECHANIC">Mec√¢nico</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label class="form-label">
                        <input type="checkbox" id="userActive" name="active" checked>
                        Usu√°rio Ativo
                    </label>
                </div>
                
                <div style="margin-top: 20px; display: flex; gap: 10px;">
                    <button type="submit" class="btn btn-success">üíæ Salvar</button>
                    <button type="button" class="btn btn-secondary" onclick="closeUserModal()">‚ùå Cancelar</button>
                </div>
            </form>
        </div>
    </div>
    
    <script src="/js/logo-manager.js"></script>
    <script src="/js/global-menu.js"></script>
    <script>
        let currentSettings = {};
        let editingUserId = null;

        // Verificar autentica√ß√£o
        function checkAuth() {
            const user = localStorage.getItem('user');
            if (!user) {
                window.location.href = '/login.html';
                return null;
            }
            return JSON.parse(user);
        }

        // Mostrar aba
        function showTab(tabName) {
            // Remover classe active de todas as abas
            document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.tab-panel').forEach(panel => panel.classList.remove('active'));

            // Ativar aba selecionada
            document.querySelector(`[onclick="showTab('${tabName}')"]`).classList.add('active');
            document.getElementById(`${tabName}-tab`).classList.add('active');

            // Carregar dados espec√≠ficos da aba
            if (tabName === 'users') {
                loadUsers();
            }
        }

        // Carregar configura√ß√µes do sistema
        async function loadSettings() {
            try {
                const response = await fetch('/api/settings/system');
                const data = await response.json();

                if (data.success) {
                    currentSettings = data.data;
                    populateSystemForm(data.data);
                    populateAppearanceForm(data.data);
                    populateCompanyForm(data.data);
                } else {
                    showError('Erro ao carregar configura√ß√µes');
                }
            } catch (error) {
                console.error('Erro ao carregar configura√ß√µes:', error);
                showError('Erro de conex√£o');
            }
        }

        // Preencher formul√°rio do sistema
        function populateSystemForm(settings) {
            document.getElementById('appName').value = settings.appName || '';
            document.getElementById('appDescription').value = settings.appDescription || '';
            document.getElementById('timezone').value = settings.timezone || 'America/Sao_Paulo';
            document.getElementById('currency').value = settings.currency || 'BRL';
            document.getElementById('language').value = settings.language || 'pt-BR';
        }

        // Preencher formul√°rio de apar√™ncia
        function populateAppearanceForm(settings) {
            document.getElementById('primaryColor').value = settings.primaryColor || '#667eea';
            document.getElementById('secondaryColor').value = settings.secondaryColor || '#764ba2';

            if (settings.logoUrl) {
                const preview = document.getElementById('logoPreview');
                preview.src = settings.logoUrl;
                preview.style.display = 'block';
            }
        }

        // Preencher formul√°rio da empresa
        function populateCompanyForm(settings) {
            document.getElementById('companyName').value = settings.companyName || '';
            document.getElementById('companyCnpj').value = settings.companyCnpj || '';
            document.getElementById('companyPhone').value = settings.companyPhone || '';
            document.getElementById('companyEmail').value = settings.companyEmail || '';
            document.getElementById('companyAddress').value = settings.companyAddress || '';
        }

        // Preview do logo
        function previewLogo(input) {
            if (input.files && input.files[0]) {
                const file = input.files[0];

                // Verificar tamanho do arquivo (m√°x. 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    showError('Arquivo muito grande! M√°ximo permitido: 5MB');
                    input.value = '';
                    return;
                }

                // Verificar tipo do arquivo
                const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/svg+xml'];
                if (!allowedTypes.includes(file.type)) {
                    showError('Formato n√£o suportado! Use: JPG, PNG, GIF ou SVG');
                    input.value = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    const preview = document.getElementById('logoPreview');
                    preview.src = e.target.result;
                    preview.style.display = 'block';

                    // Atualizar texto do upload
                    const uploadText = document.getElementById('uploadText');
                    const fileUpload = document.querySelector('.file-upload');

                    if (uploadText) {
                        uploadText.innerHTML = `
                            ‚úÖ Logo selecionado: ${file.name}<br>
                            <small>Clique para alterar</small>
                        `;
                    }

                    // Adicionar classe para indicar que h√° arquivo
                    if (fileUpload) {
                        fileUpload.classList.add('has-file');
                    }

                    // Mostrar bot√£o de upload
                    const uploadBtn = document.getElementById('uploadBtn');
                    if (uploadBtn) {
                        uploadBtn.style.display = 'inline-block';
                    }
                };
                reader.readAsDataURL(file);
            }
        }

        // Fun√ß√£o para abrir seletor de arquivo
        function openFileSelector() {
            console.log('üîç Abrindo seletor de arquivo...');
            const fileInput = document.getElementById('logoFile');
            console.log('üìÅ Input encontrado:', fileInput);

            if (fileInput) {
                try {
                    fileInput.click();
                    console.log('‚úÖ Clique executado no input file');
                } catch (error) {
                    console.error('‚ùå Erro ao clicar no input:', error);
                    // Fallback: criar um novo input tempor√°rio
                    const tempInput = document.createElement('input');
                    tempInput.type = 'file';
                    tempInput.accept = 'image/*';
                    tempInput.onchange = function(e) {
                        previewLogo(e.target);
                    };
                    tempInput.click();
                }
            } else {
                console.error('‚ùå Input file n√£o encontrado');
            }
        }

        // Fun√ß√£o para fazer upload do logo
        async function uploadLogo() {
            const fileInput = document.getElementById('logoFile');
            const uploadBtn = document.getElementById('uploadBtn');

            if (!fileInput.files || !fileInput.files[0]) {
                showError('Nenhum arquivo selecionado!');
                return;
            }

            const formData = new FormData();
            formData.append('logo', fileInput.files[0]);

            try {
                // Desabilitar bot√£o durante upload
                uploadBtn.disabled = true;
                uploadBtn.innerHTML = '‚è≥ Enviando...';

                const response = await fetch('/api/settings/logo', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showSuccess('Logo enviado com sucesso!');

                    // Atualizar preview com a URL do servidor
                    const preview = document.getElementById('logoPreview');
                    if (preview && data.data.logoUrl) {
                        preview.src = data.data.logoUrl;
                    }

                    // Notificar logo manager sobre a atualiza√ß√£o
                    if (window.logoManager) {
                        window.logoManager.updateLogo(data.data.logoUrl);
                    }

                    // Disparar evento global para outras p√°ginas
                    window.dispatchEvent(new CustomEvent('logoUpdated', {
                        detail: { logoUrl: data.data.logoUrl }
                    }));

                    // Esconder bot√£o de upload
                    uploadBtn.style.display = 'none';

                    // Atualizar texto
                    const uploadText = document.getElementById('uploadText');
                    if (uploadText) {
                        uploadText.innerHTML = `
                            ‚úÖ Logo enviado com sucesso!<br>
                            <small>Clique para alterar</small>
                        `;
                    }
                } else {
                    showError(data.error || 'Erro ao enviar logo');
                }
            } catch (error) {
                console.error('Erro no upload:', error);
                showError('Erro de conex√£o ao enviar logo');
            } finally {
                // Reabilitar bot√£o
                uploadBtn.disabled = false;
                uploadBtn.innerHTML = 'üöÄ Fazer Upload';
            }
        }

        // Salvar apar√™ncia
        async function saveAppearance() {
            try {
                // Upload do logo se selecionado
                const logoFile = document.getElementById('logoFile').files[0];
                if (logoFile) {
                    const formData = new FormData();
                    formData.append('logo', logoFile);

                    const logoResponse = await fetch('/api/settings/logo', {
                        method: 'POST',
                        body: formData
                    });

                    if (!logoResponse.ok) {
                        throw new Error('Erro ao fazer upload do logo');
                    }
                }

                // Salvar cores
                const colors = {
                    primaryColor: document.getElementById('primaryColor').value,
                    secondaryColor: document.getElementById('secondaryColor').value
                };

                const response = await fetch('/api/settings/system', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(colors)
                });

                const data = await response.json();

                if (data.success) {
                    showSuccess('Apar√™ncia salva com sucesso!');
                    loadSettings(); // Recarregar configura√ß√µes
                } else {
                    showError(data.error || 'Erro ao salvar apar√™ncia');
                }
            } catch (error) {
                console.error('Erro ao salvar apar√™ncia:', error);
                showError('Erro de conex√£o');
            }
        }

        // Restaurar cores padr√£o
        function resetColors() {
            document.getElementById('primaryColor').value = '#667eea';
            document.getElementById('secondaryColor').value = '#764ba2';
        }

        // Carregar usu√°rios
        async function loadUsers() {
            try {
                const response = await fetch('/api/settings/users');
                const data = await response.json();

                if (data.success) {
                    displayUsers(data.data);
                } else {
                    showError('Erro ao carregar usu√°rios');
                }
            } catch (error) {
                console.error('Erro ao carregar usu√°rios:', error);
                showError('Erro de conex√£o');
            }
        }

        // Exibir usu√°rios
        function displayUsers(users) {
            const container = document.getElementById('usersTableContainer');

            if (users.length === 0) {
                container.innerHTML = `
                    <div style="text-align: center; padding: 40px; color: #666;">
                        <div style="font-size: 3em; margin-bottom: 15px;">üë•</div>
                        <h3>Nenhum usu√°rio encontrado</h3>
                        <p>Clique em "Novo Usu√°rio" para adicionar o primeiro usu√°rio</p>
                    </div>
                `;
                return;
            }

            const table = `
                <table class="users-table">
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>Email</th>
                            <th>Fun√ß√£o</th>
                            <th>Status</th>
                            <th>Criado em</th>
                            <th>A√ß√µes</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${users.map(user => `
                            <tr>
                                <td>${user.name}</td>
                                <td>${user.email}</td>
                                <td><span class="role-badge">${getRoleLabel(user.role)}</span></td>
                                <td><span class="status-badge ${user.active ? 'status-active' : 'status-inactive'}">${user.active ? 'Ativo' : 'Inativo'}</span></td>
                                <td>${new Date(user.createdAt).toLocaleDateString('pt-BR')}</td>
                                <td>
                                    <div class="action-buttons">
                                        <button class="btn btn-small" onclick="editUser('${user.id}')">‚úèÔ∏è Editar</button>
                                        <button class="btn btn-danger btn-small" onclick="deleteUser('${user.id}', '${user.name}')">üóëÔ∏è Excluir</button>
                                    </div>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            `;

            container.innerHTML = table;
        }

        // Obter label da fun√ß√£o
        function getRoleLabel(role) {
            const labels = {
                'USER': 'Usu√°rio',
                'ADMIN': 'Administrador',
                'MANAGER': 'Gerente',
                'MECHANIC': 'Mec√¢nico'
            };
            return labels[role] || role;
        }

        // Mostrar modal de usu√°rio
        function showUserModal(userId = null) {
            editingUserId = userId;
            const modal = document.getElementById('userModal');
            const title = document.getElementById('userModalTitle');
            const form = document.getElementById('userForm');

            if (userId) {
                title.textContent = 'Editar Usu√°rio';
                loadUserData(userId);
            } else {
                title.textContent = 'Novo Usu√°rio';
                form.reset();
                document.getElementById('userActive').checked = true;
            }

            modal.style.display = 'block';
        }

        // Carregar dados do usu√°rio para edi√ß√£o
        async function loadUserData(userId) {
            try {
                const response = await fetch('/api/settings/users');
                const data = await response.json();

                if (data.success) {
                    const user = data.data.find(u => u.id === userId);
                    if (user) {
                        document.getElementById('userId').value = user.id;
                        document.getElementById('userName').value = user.name;
                        document.getElementById('userEmail').value = user.email;
                        document.getElementById('userRole').value = user.role;
                        document.getElementById('userActive').checked = user.active;
                        document.getElementById('userPassword').placeholder = 'Deixe em branco para manter a senha atual';
                    }
                }
            } catch (error) {
                console.error('Erro ao carregar dados do usu√°rio:', error);
                showError('Erro ao carregar dados do usu√°rio');
            }
        }

        // Fechar modal de usu√°rio
        function closeUserModal() {
            document.getElementById('userModal').style.display = 'none';
            editingUserId = null;
        }

        // Editar usu√°rio
        function editUser(userId) {
            showUserModal(userId);
        }

        // Deletar usu√°rio
        async function deleteUser(userId, userName) {
            if (!confirm(`Tem certeza que deseja excluir o usu√°rio "${userName}"?`)) {
                return;
            }

            try {
                const response = await fetch(`/api/settings/users/${userId}`, {
                    method: 'DELETE'
                });

                const data = await response.json();

                if (data.success) {
                    showSuccess('Usu√°rio exclu√≠do com sucesso!');
                    loadUsers();
                } else {
                    showError(data.error || 'Erro ao excluir usu√°rio');
                }
            } catch (error) {
                console.error('Erro ao excluir usu√°rio:', error);
                showError('Erro de conex√£o');
            }
        }

        // Mostrar mensagem de sucesso
        function showSuccess(message) {
            // Remove mensagens existentes
            document.querySelectorAll('.success-message, .error-message').forEach(el => el.remove());

            const div = document.createElement('div');
            div.className = 'success-message';
            div.textContent = message;

            const container = document.querySelector('.tab-content');
            container.insertBefore(div, container.firstChild);

            setTimeout(() => div.remove(), 5000);
        }

        // Mostrar mensagem de erro
        function showError(message) {
            // Remove mensagens existentes
            document.querySelectorAll('.success-message, .error-message').forEach(el => el.remove());

            const div = document.createElement('div');
            div.className = 'error-message';
            div.textContent = message;

            const container = document.querySelector('.tab-content');
            container.insertBefore(div, container.firstChild);

            setTimeout(() => div.remove(), 5000);
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            checkAuth();
            loadSettings();

            // Formul√°rio do sistema
            document.getElementById('systemForm').addEventListener('submit', async function(e) {
                e.preventDefault();

                const formData = new FormData(this);
                const data = Object.fromEntries(formData);

                try {
                    const response = await fetch('/api/settings/system', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();

                    if (result.success) {
                        showSuccess('Configura√ß√µes salvas com sucesso!');
                        loadSettings();

                        // Notificar outras p√°ginas sobre a atualiza√ß√£o das configura√ß√µes
                        window.dispatchEvent(new CustomEvent('settingsUpdated', {
                            detail: {
                                companyName: data.appName,
                                appName: data.appName
                            }
                        }));

                        // Notificar logo manager se houver mudan√ßa no nome da empresa
                        if (window.logoManager && data.appName) {
                            window.logoManager.companyName = data.appName;
                            window.logoManager.updateAllLogos();
                        }
                    } else {
                        showError(result.error || 'Erro ao salvar configura√ß√µes');
                    }
                } catch (error) {
                    console.error('Erro ao salvar configura√ß√µes:', error);
                    showError('Erro de conex√£o');
                }
            });

            // Formul√°rio da empresa
            document.getElementById('companyForm').addEventListener('submit', async function(e) {
                e.preventDefault();

                const formData = new FormData(this);
                const data = Object.fromEntries(formData);

                try {
                    const response = await fetch('/api/settings/system', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();

                    if (result.success) {
                        showSuccess('Dados da empresa salvos com sucesso!');
                        loadSettings();
                    } else {
                        showError(result.error || 'Erro ao salvar dados da empresa');
                    }
                } catch (error) {
                    console.error('Erro ao salvar dados da empresa:', error);
                    showError('Erro de conex√£o');
                }
            });

            // Formul√°rio de usu√°rio
            document.getElementById('userForm').addEventListener('submit', async function(e) {
                e.preventDefault();

                const formData = new FormData(this);
                const data = Object.fromEntries(formData);
                data.active = document.getElementById('userActive').checked;

                // Remove senha vazia para edi√ß√£o
                if (editingUserId && !data.password) {
                    delete data.password;
                }

                try {
                    const url = editingUserId ? `/api/settings/users/${editingUserId}` : '/api/settings/users';
                    const method = editingUserId ? 'PUT' : 'POST';

                    const response = await fetch(url, {
                        method,
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();

                    if (result.success) {
                        showSuccess(editingUserId ? 'Usu√°rio atualizado com sucesso!' : 'Usu√°rio criado com sucesso!');
                        closeUserModal();
                        loadUsers();
                    } else {
                        showError(result.error || 'Erro ao salvar usu√°rio');
                    }
                } catch (error) {
                    console.error('Erro ao salvar usu√°rio:', error);
                    showError('Erro de conex√£o');
                }
            });
        });

        // Fechar modal ao clicar fora
        window.onclick = function(event) {
            const modal = document.getElementById('userModal');
            if (event.target === modal) {
                closeUserModal();
            }
        };
    </script>
