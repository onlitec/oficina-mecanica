#!/bin/bash

echo "üîÑ Reset completo da instala√ß√£o Docker..."
echo "========================================"

# 1. Parar e limpar tudo
echo "üßπ Limpando containers existentes..."
cd /var/www/oficina-docker
sudo docker compose down 2>/dev/null || true
sudo docker stop $(sudo docker ps -aq) 2>/dev/null || true
sudo docker rm $(sudo docker ps -aq) 2>/dev/null || true

# 2. Verificar estrutura do diret√≥rio
echo ""
echo "üìÅ Verificando estrutura do diret√≥rio..."
pwd
ls -la

# 3. Copiar todos os arquivos necess√°rios
echo ""
echo "üìã Copiando arquivos do projeto..."
sudo cp /var/www/html/docker-compose-working.yml ./docker-compose.yml
sudo cp /var/www/html/Dockerfile.simple ./Dockerfile
sudo cp /var/www/html/package*.json .
sudo cp /var/www/html/tsconfig.json .

# Copiar diret√≥rios
sudo cp -r /var/www/html/src .
sudo cp -r /var/www/html/css .
sudo cp -r /var/www/html/js .
sudo cp -r /var/www/html/styles .
sudo cp -r /var/www/html/prisma .

# Copiar arquivos HTML
sudo cp /var/www/html/*.html .
sudo cp /var/www/html/manifest.json . 2>/dev/null || true
sudo cp /var/www/html/sw.js . 2>/dev/null || true

# Criar uploads
sudo mkdir -p uploads
sudo cp -r /var/www/html/uploads/* ./uploads/ 2>/dev/null || true

# 4. Ajustar permiss√µes
echo ""
echo "üîê Ajustando permiss√µes..."
sudo chown -R $USER:$USER /var/www/oficina-docker

# 5. Verificar arquivos copiados
echo ""
echo "‚úÖ Verificando arquivos copiados:"
echo "Docker files:"
ls -la docker-compose.yml Dockerfile package.json 2>/dev/null || echo "‚ùå Arquivos Docker n√£o encontrados"

echo "Source files:"
ls -la src/ 2>/dev/null || echo "‚ùå Diret√≥rio src/ n√£o encontrado"

echo "Static files:"
ls -la css/ js/ styles/ 2>/dev/null || echo "‚ùå Diret√≥rios de arquivos est√°ticos n√£o encontrados"

# 6. Mostrar conte√∫do do docker-compose.yml
echo ""
echo "üìÑ Conte√∫do do docker-compose.yml:"
head -20 docker-compose.yml

# 7. Iniciar containers
echo ""
echo "üöÄ Iniciando containers..."
sudo docker compose up -d --build

# 8. Aguardar inicializa√ß√£o
echo ""
echo "‚è≥ Aguardando inicializa√ß√£o (45 segundos)..."
sleep 45

# 9. Verificar status final
echo ""
echo "üìä Status final dos containers:"
sudo docker compose ps

# 10. Verificar porta 8080
echo ""
echo "üîå Verificando porta 8080:"
sudo netstat -tuln | grep 8080 || echo "‚ùå Porta 8080 n√£o est√° em uso"

# 11. Testar aplica√ß√£o
echo ""
echo "üåê Testando aplica√ß√£o:"
if curl -s -o /dev/null -w "%{http_code}" http://localhost:8080 | grep -q "200"; then
    echo "‚úÖ Aplica√ß√£o respondendo na porta 8080"
else
    echo "‚ùå Aplica√ß√£o n√£o est√° respondendo"
    echo "üìã Logs da aplica√ß√£o:"
    sudo docker compose logs --tail=10 oficina-app 2>/dev/null || echo "Container oficina-app n√£o encontrado"
fi

# 12. Testar via Nginx
echo ""
echo "üåê Testando via Nginx:"
if curl -s -o /dev/null -w "%{http_code}" http://oficina.local | grep -q "200"; then
    echo "‚úÖ Nginx proxy funcionando"
else
    echo "‚ùå Nginx proxy com problemas"
fi

echo ""
echo "üéØ RESULTADO FINAL:"
echo "=================="
echo "Containers ativos:"
sudo docker compose ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"

echo ""
echo "URLs para testar:"
echo "- Direto: http://localhost:8080"
echo "- Via Nginx: http://oficina.local"
echo ""
echo "Para ver logs: sudo docker compose logs -f oficina-app"
