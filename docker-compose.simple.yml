services:
  # Aplicação Principal
  oficina-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: oficina-mecanica:latest
    container_name: oficina_app_vhost
    restart: unless-stopped
    ports:
      - "8080:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://oficina_user:oficina_pass_123@postgres:5432/oficina_vhost
      - JWT_SECRET=oficina_jwt_secret_vhost_$(date +%s)
      - JWT_EXPIRES_IN=7d
      - CORS_ORIGIN=http://oficina.local
      - LOG_LEVEL=info
      - COMPANY_NAME=Oficina Mecânica VHost
      - TZ=America/Sao_Paulo
    volumes:
      - uploads_data:/app/uploads
      - app_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - oficina_vhost_network

  # Banco de Dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: oficina_postgres_vhost
    restart: unless-stopped
    environment:
      POSTGRES_DB: oficina_vhost
      POSTGRES_USER: oficina_user
      POSTGRES_PASSWORD: oficina_pass_123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oficina_user -d oficina_vhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - oficina_vhost_network

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local
  app_logs:
    driver: local

networks:
  oficina_vhost_network:
    driver: bridge
